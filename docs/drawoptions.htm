<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN">
<html lang="en">
<head>
   <meta http-equiv="X-UA-Compatible" content="IE=Edge">

   <title>Supported classes and options by JSROOT</title>

   <script src="../scripts/JSRootCore.js" type="text/javascript"></script>

   <script type='text/javascript'>

      function file_error(str) {
         document.getElementById('debug').innerHTML += "<h4>" + str + "</h4>";
      }

      var global_dir = "files/"; // for local testing
      var is_minimal = JSROOT.GetUrlOption('all')==null && JSROOT.GetUrlOption('default')==null; 

      if (JSROOT.source_dir.indexOf("rawgit")>=0) global_dir = "http://jsroot.gsi.de/files/"; else
      if (JSROOT.source_dir.indexOf("file:///")==0) global_dir = "files/"; else
      if (JSROOT.source_dir.indexOf("http")==0) global_dir = "../../files/";

      function draw_item(file, itemname, divid, drawopt) {
         file.ReadObject(itemname, function(obj) {
            if (obj==null) return file_error("In file " + file.fURL + " item " + itemname + " cannot be find");
            JSROOT.draw(divid, obj, drawopt); 
         });
      }
      
      var class_list = {};

      function draw_item_options(file, itemname, divid, options, factor, class_name) {
         var comment = null;
         var pos = options.indexOf("comment:");
         if (pos >= 0) {
            comment = options.substr(pos+8);
            options = options.substr(0,pos);
         }

         var arr = options.split(";");

         var fname = file.fURL;
         if (fname.indexOf("http")!=0)
            fname = (JSROOT.source_dir.indexOf("http")==0) ? file.fURL.substr(3) : "docs/"+ file.fURL;

         var has_equal = false;

         var html = "";
         if (!is_minimal) html += '<br/><br/>';
         html += 'File: <a href="../index.htm?';
         if (fname.indexOf(".json")>0) 
            html += 'json=' + fname;
         else
            html += 'file=' + fname;
         
         html += '" target="_blank">' + fname.slice(fname.lastIndexOf('/')+1) + '</a>';
         for (var i in arr) {
            if (i==0) html += " Item: "; else
            if (i==1) html += " Options: "; else html += ", ";
            html += '<a href="../index.htm?nobrowser&';
            if (fname.indexOf(".json")>0) {
               html += 'json=' + fname + '&';
            } else {
               html += 'file=' + fname + '&item=' + itemname + '&';
            }

            if (arr[i].indexOf("=")<0) html += 'opt=' + arr[i];
                                  else { html += arr[i]; has_equal = true; } 

            html += '" target="_blank">';
            if (i==0) html += itemname; else
            if (arr[i] == "") html += '&lt;default&gt;'; else html += arr[i]; 
            html += '</a>'; 
         }

         if (comment != null) html += comment;

         html += "<br/><br/>";

         document.getElementById(divid).innerHTML += html;

         if (is_minimal) return;

         // special case - do not draw on main page
         var w = JSROOT.GetUrlOption("w", null, "800");
         var h = JSROOT.GetUrlOption("h", null, "600");
         if (factor != null) h = w * factor;

         for (var i in arr) {
            if (class_name!=null) {
               if ((JSROOT.GetUrlOption("default")!=null) && (class_name in class_list)) {
                  console.log("skip " + class_name + " display");
                  return;
               }
               class_list[class_name] = true;
            }
         
            var subid = divid + "_" + i;
            var html = '<div id="' + subid + '" style="width:'+w+'px; height:'+h+'px"></div>';
            document.getElementById(divid).innerHTML += html;
            draw_item(file, itemname, subid, arr[i]);
            
            if (has_equal || (JSROOT.GetUrlOption("all")==null)) return;
         }
      }

      function LoadFile(filename, filecallback) {

         var dir = JSROOT.GetUrlOption("path");
         if (dir==null) dir = global_dir;
         
         if (filename.indexOf(".json")>0) {
            if (JSROOT.source_dir.indexOf("file:///")!=0)             
               return filecallback({ fURL: dir+filename+'.gz' });
            return filecallback({ fURL: dir+filename });
         }

         // do not read file when not required - create only fake instance
         if (is_minimal) return filecallback({ fURL: dir+filename });
         
         JSROOT.OpenFile(dir + filename + "+", function(file) {
            if (file==null) return file_error(dir+filename + " cannot be opened");
            filecallback(file);
         });
      }

      function CreateGui() {

         document.getElementById('debug').innerHTML = "<h3>JavaScript ROOT version <font color='green'>" + JSROOT.version + "</font> from <a href='" + JSROOT.source_dir +"index.htm'>" + JSROOT.source_dir + "</a></h3>";

         var arg = "";
         if (JSROOT.GetUrlOption("w") != null) arg += "&w=" + JSROOT.GetUrlOption("w");  
         if (JSROOT.GetUrlOption("h") != null) arg += "&h=" + JSROOT.GetUrlOption("h");  
         if (JSROOT.GetUrlOption("path")!=null) {
            global_dir = JSROOT.GetUrlOption("path");
            arg += "&path=" + global_dir;
         }
         
         var extra_drawing = (JSROOT.source_dir.indexOf("http")<0) || (JSROOT.GetUrlOption("more")!=null);

         document.getElementById('debug').innerHTML += "<a href='drawoptions.htm?list" + arg + "'>Only items/options list</a><br/>"; 
         document.getElementById('debug').innerHTML += "<a href='drawoptions.htm?default&" + arg + "'>Drawings with default options</a><br/>"; 
         document.getElementById('debug').innerHTML += "<a href='drawoptions.htm?all&" + arg + "'>Drawings for all supported options</a><br/>";

         LoadFile("hsimple.root", function(file) {
            draw_item_options(file, "hpx;1", "h1_draw", ";P;P0;E;E1;pE2", 0., "TH1");
            draw_item_options(file, "hpxpy;1", "h2_draw", ";COL;COLZ;COL0Z;COL2;COL3;LEGO;colpal79", 0., "TH2");
            draw_item_options(file, "hprof;1", "prof_draw", ";E;E1;pE2;hist", 0., "TProfile");
         });

         if (extra_drawing) {
            LoadFile("hbins.root", function(file) {
               draw_item_options(file, "SpectraPions;1", "hbins_draw", ";mathjax=1", 0., "TH1");
            });
            LoadFile("hitmap.root", function(file) {
               draw_item_options(file, "HitMap;1", "atlas1_draw", "colz", 0., "TH2");
               draw_item_options(file, "EnergyMeanAsyLo;1", "atlas2_draw", "hist", 0., "TH1");
            });

            LoadFile("atlas.root", function(file) {
               draw_item_options(file, "LEDShapeHeightCorr_Gain0;1", "atlas3_draw", "col", 0., "TH2");
            });

            LoadFile("QAresults.root", function(file) {
               draw_item_options(file, "PIDqa/PIDqa1/ITS/hNsigmaP_ITS_electron;1", "qares_2d_draw", "hist;colz", 0., "TH2");
            });
            
         }

         LoadFile("glbox.root", function(file) {
            draw_item_options(file, "h31;1", "h3_draw", "", 0., "TH3");
         });

         LoadFile("fillrandom.root", function(file) {
            draw_item_options(file, "sqroot;1", "f1_draw", "", 0., "TF1");
         });

         LoadFile("ip0.root", function(file) {
            draw_item_options(file, "c;1", "f1_draw2", "", 0., "TF1");
         });

         LoadFile("danilo5.root", function(file) {
            draw_item_options(file, "canvas;1", "f1_draw3", "", 0., "TF1");
         });

         LoadFile("danilo6.root", function(file) {
            draw_item_options(file, "canvas;1", "f1_draw4", "", 0., "TF1");
         });

         if (extra_drawing) {
            LoadFile("ff2.root", function(file) {
               draw_item_options(file, "c1Dia;1", "f1_draw5", "", 0., "TF1");
            });
            LoadFile("ff3.root", function(file) {
               draw_item_options(file, "c1Dia;1", "f1_draw6", "", 0., "TF1");
            });
         }

         LoadFile("rf107.root", function(file) {
            draw_item_options(file, "rf107_plotstyles;1", "can_draw", "", 0., "TCanvas");
         });

         LoadFile("ct.root", function(file) {
            draw_item_options(file, "ct;1", "can2_draw", "", 0. , "TCanvas");
         });

         LoadFile("zdemo.root", function(file) {
            draw_item_options(file, "zdemo;1", "can3_draw", ";mathjax=1", 0. , "TCanvas");
         });

         if (extra_drawing)
            LoadFile("JPsi_evolution.root", function(file) {
               draw_item_options(file, "CutTrees/cut1/C_cut1 < 2.85714;1", "can4_draw", "", 0., "TCanvas");
            });

         LoadFile("stacks.root", function(file) {
            draw_item_options(file, "stacks;1", "can5_draw", "", 0., "TCanvas");
         });

         LoadFile("legends.root", function(file) {
            draw_item_options(file, "legends;1", "can6_draw", ";mathjax=1", 0., "TCanvas");
         });

         LoadFile("rootgeom.json", function(file) {
            draw_item_options(file, "json", "geo1_draw", "", 0., "TGeo");
         });
         LoadFile("atlas_cryo.json", function(file) {
            draw_item_options(file, "json", "geo2_draw", "", 0., "TGeo");
         });
         LoadFile("simple_alice.json", function(file) {
            draw_item_options(file, "json", "geo3_draw", "", 0., "TGeo");
         });

         if (extra_drawing) {
            LoadFile("can4.root", function(file) {
               draw_item_options(file, "c1;1", "can7_draw", "", 0., "TCanvas");
            });
            LoadFile("higgs_c.root", function(file) {
               draw_item_options(file, "c;1", "can8_draw", "col=1;col=2;col=3;mathjax=1", 0., "TCanvas");
            });
         }

      }
   </script>

</head>

<body onload="JSROOT.AssertPrerequisites(JSROOT.GetUrlOption('all')!=null || JSROOT.GetUrlOption('default')!=null ? '2d;3d;io' : '', CreateGui, 'debug')">

  <h1>Supported draw options for different classes</h1> 

  <div id="debug">loading...</div>

  <h2><a href="draw_gr.htm">TGraph</a> classes</h2> 

  <h2><a href="draw_aux.htm">Auxiliary</a> classes</h2> 

  <h2>TPaveText <a href="latex.htm?mathjax">with</a> and <a href="latex.htm">without</a> MathJax.js</h2> 

  <h2>TH1 class</h2> 

  <div id="h1_draw"></div>
  <div id="hbins_draw"></div>
  <div id="atlas2_draw"></div>

  <h2>TH2 class</h2> 

  <div id="h2_draw"></div>

  <div id="atlas1_draw"></div>
  <div id="atlas3_draw"></div>
  <div id="qares_2d_draw"></div>

  <h2>TH3 class</h2> 

  <div id="h3_draw"></div>

  <h2>TProfile class</h2> 

  <div id="prof_draw"></div>

  <h2>TF1 class</h2> 

  <div id="f1_draw"></div>
  <div id="f1_draw2"></div>
  <div id="f1_draw3"></div>
  <div id="f1_draw4"></div>
  <div id="f1_draw5"></div>
  <div id="f1_draw6"></div>

  <h2>TCanvas class</h2> 

  <div id="can_draw"></div>
  <div id="can2_draw"></div>
  <div id="can3_draw"></div>
  <div id="can4_draw"></div>
  <div id="can5_draw"></div>
  <div id="can6_draw"></div>
  <div id="can7_draw"></div>
  <div id="can8_draw"></div>

  <h2>TGeo classes</h2> 
  <div id="geo1_draw"></div>
  <div id="geo2_draw"></div>
  <div id="geo3_draw"></div>

   

</body>

</html>

